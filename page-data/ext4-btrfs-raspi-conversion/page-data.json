{"componentChunkName":"component---src-templates-blog-post-js","path":"/ext4-btrfs-raspi-conversion","result":{"data":{"post":{"excerpt":"Many guides already exist for configuring a raspberry pi root partition to use btrfs, however there were a few circumstances that basically…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Converting the Raspberry Pi rootfs to btrfs on Ubuntu 18.04\",\n  \"slug\": \"ext4-btrfs-raspi-conversion\",\n  \"date\": \"2020-06-28T00:00:00.000Z\",\n  \"language\": \"en\",\n  \"cover\": \"./spirit_of_java_by_meganerid.jpg\",\n  \"imageShare\": \"./social-media-card-generator-share.png\",\n  \"tags\": [\"gatsby\", \"ubuntu\", \"btrfs\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Many guides already exist for configuring a raspberry pi root partition to use btrfs, however there were a few circumstances that basically invalidated all of them:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"I needed the raspberry pi to run Ubuntu 18.04 for my android development,\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The ubuntu image for the pi4 has royally messed with the default /boot volume, and..\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"I had to do this all on my Windows laptop, or the pi itself through ssh. \")), mdx(\"p\", null, \"If for some crazy reason your situation mirrors my own, I hope you find this documentation useful. Feel free to comment below if you have suggestions or improvements to the way I did things \\uD83D\\uDE0A\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Formatting the SD card\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"I used \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.balena.io/etcher/\"\n  }), \"balenaEtcher\"), \" to flash the latest pi4-compatible \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://ubuntu.com/download/raspberry-pi\"\n  }), \"Ubuntu 18.04 64-bit image\"), \" onto the card.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Etcher automatically unmounts the card after it\\u2019s finished, so re-mount and use Disk Management (Win + R: \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"diskmgmt.msc\"), \") to create \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"two\"), \" partitions. The fist should be the current root partition size (unexpanded) + whatever space you\\u2019d like to add. The second must be formatted \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"without\"), \" Quick Format, and use all remaining space on the volume.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Once you\\u2019ve created both partitions, delete the first so that the space shows \\u201Cunallocated\\u201D. This will let the pi expand it\\u2019s root partition up to your second placeholder partition.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Before ejecting the SD card, create a blank file named \\u201Cssh\\u201D in the boot partition (the only one that will mount on Windows), and remove the extension. This allows us to ssh into the pi on first boot.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Starting up the pi\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"bash\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# Terminal 1\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"npm\"), \" run dev\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# Terminal 2\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"npm\"), \" run generatePostPreviewImages\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# ..you can also specify the url (if different from http://localhost:8000/)\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"npm\"), \" run generatePostPreviewImages http://localhost:1234/\"))), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In the post\\u2019s header, add the generated images:\", mdx(\"div\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"yaml\"\n  }), mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"title\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" My blog post\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# ...\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"imageShare\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" ./social\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \"media\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \"card\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \"generator\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \"share.png\"))))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\uD83D\\uDCA1Quick tip:\"), \" If you want to recreate this pictures\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Converting the Raspberry Pi rootfs to btrfs on Ubuntu 18.04","date":"2020-06-28T00:00:00.000Z","slug":"ext4-btrfs-raspi-conversion","language":"en","tags":["gatsby","ubuntu","btrfs"],"cover":{"publicURL":"/static/b0da2248b1bc007273f727c44ff9c9cf/spirit_of_java_by_meganerid.jpg"},"imageShare":null,"translations":null}}},"pageContext":{"slug":"ext4-btrfs-raspi-conversion","previous":{"fileAbsolutePath":"/home/troy/dev/ifiht.github.io/content/posts/2019-07-10-using-mdx/index-fr.mdx","frontmatter":{"title":"Utiliser MDX","slug":"using-mdx-fr","tags":["gatsby","translation"],"language":"fr","cover":null,"unlisted":true},"timeToRead":1,"excerpt":"Salut les gens! Grace a à MDX, il est maintenant possible d'ajouter du JSX dans du Markdown! Juste en dessous, un example de JSX intégré…"},"next":null}},"staticQueryHashes":["1956263691","2749999020"]}